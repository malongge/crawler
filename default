##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		#B
#		add_header Set-Cookie "HttpOnly"; 
#		add_header Set-Cookie "AUTH_COOKIE=taltestcrawler";
#		if ($http_cookie ~* "AUTH_COOKIE=([a-z0-9]+)(?:;|$)") {
#		     return 404;
#		}
		#C
		#limit_conn con 5; limit_req zone=req burst=10 nodelay;
	}
	error_page    404  /404.html;

	location = /404.html {

	root   /var/www/html;

	}	
	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
    	#	root           /home/gittest;
    	#	#fastcgi_pass   127.0.0.1:9000;
    	#	fastcgi_pass    unix:/run/php/php7.0-fpm.sock;
    	#	fastcgi_index  index.php;
    	#	fastcgi_intercept_errors        on;
    	#	fastcgi_param  SCRIPT_FILENAME  /home/gittest/$fastcgi_script_name;
    	#	include        fastcgi_params;
    	#}

	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		root /var/www/html;
		# With php7.0-cgi alone:
		#fastcgi_pass 127.0.0.1:9000;
		# With php7.0-fpm:
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		#放爬虫1
		#if ($http_user_agent ~* "wget|python-requests|grabber|sqlmap|nessus|injector|netsparker|python-httplib2|paros| dirbuster|pangolin|nikto|webinspect|havij|w3f|hydra") {
		#    return 404;
		# }
		#valid_referers 47.52.164.88 *.baidu.com *.sogou.com *.google.com;
		#if ($invalid_referer) {
		#    return 404; 
                #}
                #B
                #add_header Set-Cookie "HttpOnly";
                #add_header Set-Cookie "AUTH_COOKIE=taltestcrawler";
                #if ($http_cookie ~* "AUTH_COOKIE=([a-z0-9]+)(?:;|$)") {
                #     return 404;
                #}
                #if ($http_cookie ~* "AUTH_COOKIE=taltestcrawler") {
                #     return 404.php;
                #}

                #C
                limit_conn con 5; 
		limit_req zone=req burst=10 nodelay;

	}
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
